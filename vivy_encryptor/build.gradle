plugins {
    id "maven-publish"
}

apply plugin: 'com.android.library'
apply plugin: 'kotlin-android'

android {

    def androidConfig = rootProject.ext.android

    compileSdkVersion androidConfig.compileSdkVersion


    defaultConfig {
        minSdkVersion androidConfig.minSdkVersion
        targetSdkVersion androidConfig.targetSdkVersion
        versionCode 1
        versionName "1.0"
        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
        consumerProguardFiles 'consumer-rules.pro'
    }

    buildTypes {
        debug {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }

        staging {
            initWith debug
            minifyEnabled true
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }

        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
    }

    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }

    kotlinOptions {
        jvmTarget = "1.8"
    }

    lintOptions {
        warning 'InvalidPackage'
    }
}

afterEvaluate {
    publishing {

        repositories {
            maven {
                name = "GitHubPackages"
                url = uri("https://maven.pkg.github.com/VivyTeam/packages")
                credentials {
                    username = project.findProperty("usr") as String ?: System.getenv("GITHUB_ACTOR")
                    password = project.findProperty("key") as String ?: System.getenv("GITHUB_TOKEN")
                }
            }
        }

        publications {
            debug(MavenPublication) {
                // Applies the component for the debug build variant.
                from components.debug

                groupId project.findProperty("groupId")
                artifactId project.findProperty("artifactId")
                version System.getenv("VERSION") ?: project.findProperty("version")
            }
        }
    }
}

dependencies {
    implementation fileTree(dir: 'libs', include: ['*.jar'])
    api commonDependencies.timber
    api commonDependencies.google.gson
    api commonDependencies.rxJava2
    api commonDependencies.options
    api commonDependencies.google.guava
    api commonDependencies.bouncyCastle
    api commonDependencies.bouncyCastlePGP
    api commonDependencies.google.elepticCurve
    api commonDependencies.androidx.securityCrypto

    testImplementation 'junit:junit:4.12'
    androidTestImplementation commonTestDependencies.testRunner
    androidTestImplementation commonTestDependencies.espresso
    androidTestImplementation commonTestDependencies.assertj
    testImplementation commonTestDependencies.assertj
    api "org.jetbrains.kotlin:kotlin-stdlib-jdk8:$kotlin_version"
}
